"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Endaoment API
 * The official Endaoment API & SDK endpoints
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchOrgsDeployedStatusEnum = exports.EndaomentSdkApi = void 0;
var runtime = require("../runtime");
var models_1 = require("../models");
/**
 *
 */
var EndaomentSdkApi = /** @class */ (function (_super) {
    __extends(EndaomentSdkApi, _super);
    function EndaomentSdkApi() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Only organizations that already have a deployed contract on Endaoment will be returned
     * Get a list of deployed Org contracts
     */
    EndaomentSdkApi.prototype.getDeployedOrgsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters.count !== undefined) {
                            queryParameters['count'] = requestParameters.count;
                        }
                        if (requestParameters.offset !== undefined) {
                            queryParameters['offset'] = requestParameters.offset;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v1/sdk/orgs",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(models_1.NdaoSdkOrgFromJSON); })];
                }
            });
        });
    };
    /**
     * Only organizations that already have a deployed contract on Endaoment will be returned
     * Get a list of deployed Org contracts
     */
    EndaomentSdkApi.prototype.getDeployedOrgs = function (requestParameters, initOverrides) {
        if (requestParameters === void 0) { requestParameters = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getDeployedOrgsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get the transaction information required to swap and donate a given token amount to an org
     */
    EndaomentSdkApi.prototype.getDonationSwapTransactionRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.ein === null || requestParameters.ein === undefined) {
                            throw new runtime.RequiredError('ein', 'Required parameter requestParameters.ein was null or undefined when calling getDonationSwapTransaction.');
                        }
                        if (requestParameters.amountIn === null || requestParameters.amountIn === undefined) {
                            throw new runtime.RequiredError('amountIn', 'Required parameter requestParameters.amountIn was null or undefined when calling getDonationSwapTransaction.');
                        }
                        queryParameters = {};
                        if (requestParameters.ein !== undefined) {
                            queryParameters['ein'] = requestParameters.ein;
                        }
                        if (requestParameters.tokenContractAddress !== undefined) {
                            queryParameters['tokenContractAddress'] = requestParameters.tokenContractAddress;
                        }
                        if (requestParameters.amountIn !== undefined) {
                            queryParameters['amountIn'] = requestParameters.amountIn;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v1/sdk/donations/swap",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, models_1.NdaoSdkDonationSwapFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get the transaction information required to swap and donate a given token amount to an org
     */
    EndaomentSdkApi.prototype.getDonationSwapTransaction = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getDonationSwapTransactionRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Get the transaction information required to deploy a given org
     */
    EndaomentSdkApi.prototype.getOrgDeployTransactionRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.ein === null || requestParameters.ein === undefined) {
                            throw new runtime.RequiredError('ein', 'Required parameter requestParameters.ein was null or undefined when calling getOrgDeployTransaction.');
                        }
                        queryParameters = {};
                        if (requestParameters.ein !== undefined) {
                            queryParameters['ein'] = requestParameters.ein;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v1/sdk/orgs/deploy",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return (0, models_1.NdaoSdkTransactionFromJSON)(jsonValue); })];
                }
            });
        });
    };
    /**
     * Get the transaction information required to deploy a given org
     */
    EndaomentSdkApi.prototype.getOrgDeployTransaction = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getOrgDeployTransactionRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Only community and transparent funds will be returned
     * Get a list of Endaoment funds
     */
    EndaomentSdkApi.prototype.getVisibleFundsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters.count !== undefined) {
                            queryParameters['count'] = requestParameters.count;
                        }
                        if (requestParameters.offset !== undefined) {
                            queryParameters['offset'] = requestParameters.offset;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v1/sdk/funds",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(models_1.NdaoSdkFundFromJSON); })];
                }
            });
        });
    };
    /**
     * Only community and transparent funds will be returned
     * Get a list of Endaoment funds
     */
    EndaomentSdkApi.prototype.getVisibleFunds = function (requestParameters, initOverrides) {
        if (requestParameters === void 0) { requestParameters = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.getVisibleFundsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Note: If using multiple parameters, the search will perform an AND operation of all inputs
     * Get a list of Endaoment Orgs, filtered by search parameters
     */
    EndaomentSdkApi.prototype.searchOrgsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        queryParameters = {};
                        if (requestParameters.searchTerm !== undefined) {
                            queryParameters['searchTerm'] = requestParameters.searchTerm;
                        }
                        if (requestParameters.nteeMajorCodes !== undefined) {
                            queryParameters['nteeMajorCodes'] = requestParameters.nteeMajorCodes;
                        }
                        if (requestParameters.nteeMinorCodes !== undefined) {
                            queryParameters['nteeMinorCodes'] = requestParameters.nteeMinorCodes;
                        }
                        if (requestParameters.deployedStatus !== undefined) {
                            queryParameters['deployedStatus'] = requestParameters.deployedStatus;
                        }
                        if (requestParameters.count !== undefined) {
                            queryParameters['count'] = requestParameters.count;
                        }
                        if (requestParameters.offset !== undefined) {
                            queryParameters['offset'] = requestParameters.offset;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v1/sdk/orgs/search",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(models_1.NdaoSdkOrgFromJSON); })];
                }
            });
        });
    };
    /**
     * Note: If using multiple parameters, the search will perform an AND operation of all inputs
     * Get a list of Endaoment Orgs, filtered by search parameters
     */
    EndaomentSdkApi.prototype.searchOrgs = function (requestParameters, initOverrides) {
        if (requestParameters === void 0) { requestParameters = {}; }
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.searchOrgsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    /**
     * Only community and transparent funds will be returned
     * Get a list of Endaoment Funds, filtered by search parameter
     */
    EndaomentSdkApi.prototype.searchVisibleFundsRaw = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var queryParameters, headerParameters, response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (requestParameters.name === null || requestParameters.name === undefined) {
                            throw new runtime.RequiredError('name', 'Required parameter requestParameters.name was null or undefined when calling searchVisibleFunds.');
                        }
                        queryParameters = {};
                        if (requestParameters.name !== undefined) {
                            queryParameters['name'] = requestParameters.name;
                        }
                        if (requestParameters.count !== undefined) {
                            queryParameters['count'] = requestParameters.count;
                        }
                        if (requestParameters.offset !== undefined) {
                            queryParameters['offset'] = requestParameters.offset;
                        }
                        headerParameters = {};
                        return [4 /*yield*/, this.request({
                                path: "/v1/sdk/funds/search",
                                method: 'GET',
                                headers: headerParameters,
                                query: queryParameters,
                            }, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [2 /*return*/, new runtime.JSONApiResponse(response, function (jsonValue) { return jsonValue.map(models_1.NdaoSdkFundFromJSON); })];
                }
            });
        });
    };
    /**
     * Only community and transparent funds will be returned
     * Get a list of Endaoment Funds, filtered by search parameter
     */
    EndaomentSdkApi.prototype.searchVisibleFunds = function (requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function () {
            var response;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.searchVisibleFundsRaw(requestParameters, initOverrides)];
                    case 1:
                        response = _a.sent();
                        return [4 /*yield*/, response.value()];
                    case 2: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    return EndaomentSdkApi;
}(runtime.BaseAPI));
exports.EndaomentSdkApi = EndaomentSdkApi;
/**
 * @export
 */
exports.SearchOrgsDeployedStatusEnum = {
    Deployed: 'deployed',
    Undeployed: 'undeployed',
    All: 'all'
};
